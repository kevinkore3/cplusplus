#include <SDL_ttf.h>
#include <sstream>
#include <ctime>
#include <cstdlib>
using namespace std;
//sketchpad rough draft
int main(int argc,char *argv[])
{
    srand(time(NULL));
    SDL_Event input;
    bool mousedown=0;
    bool quit=0;
    int previous_x=NULL;
    int previous_y=NULL;
    int x;
    int y;
    int b_r=255;
    int b_g=255;
    int b_b=255;
    int r;
    int g;
    int b;
    int point;
    bool fill_r=0;
    bool fill_g=0;
    bool fill_b=0;
    bool random=0;
    bool r_plus_down=0;
    bool g_plus_down=0;
    bool b_plus_down=0;
    bool r_minus_down=0;
    bool g_minus_down=0;
    bool b_minus_down=0;
    SDL_Color black{0,0,0};
    SDL_Color red{255,0,0};
    SDL_Color blue{0,0,255};
    SDL_Color green{0,255,0};
    SDL_Color pen_color{0,0,0};
    stringstream sstream;
    SDL_Init(SDL_INIT_VIDEO);
    if(SDL_Init(SDL_INIT_VIDEO)!=0)
    {
        return 1;
    }
    TTF_Init();
    if(TTF_Init()!=0)
    {
        return 1;
    }
    TTF_Font *font=TTF_OpenFont("opensans-bold.ttf",50);
    if(font==NULL)
    {
        return 1;
    }
    SDL_Window *window=SDL_CreateWindow("HERRO",100,100,800,600,SDL_WINDOW_SHOWN);
    SDL_Renderer *renderer=SDL_CreateRenderer(window,-1,SDL_RENDERER_ACCELERATED);
    SDL_Surface *s_r=TTF_RenderText_Solid(font,"R",red);
    SDL_Surface *s_g=TTF_RenderText_Solid(font,"G",green);
    SDL_Surface *s_b=TTF_RenderText_Solid(font,"B",blue);
    SDL_Surface *s_plus=TTF_RenderText_Solid(font,"+",black);
    SDL_Surface *s_minus=TTF_RenderText_Solid(font,"-",black);
    SDL_Surface *s_random=TTF_RenderText_Solid(font,"Random Color",black);
    SDL_Surface *s_color_text;
    SDL_Texture *t_color_text;
    SDL_Texture *t_r=SDL_CreateTextureFromSurface(renderer,s_r);
    SDL_Texture *t_g=SDL_CreateTextureFromSurface(renderer,s_g);
    SDL_Texture *t_b=SDL_CreateTextureFromSurface(renderer,s_b);
    SDL_Texture *t_random=SDL_CreateTextureFromSurface(renderer,s_random);
    SDL_Texture *t_plus=SDL_CreateTextureFromSurface(renderer,s_plus);
    SDL_Texture *t_minus=SDL_CreateTextureFromSurface(renderer,s_minus);
    SDL_Rect rect_menu{0,0,800,100};
    SDL_Rect rect_r{740,10,50,20};
    SDL_Rect rect_g{740,38,50,20};
    SDL_Rect rect_b{740,66,50,20};
    SDL_Rect rect_r_text{720,10,10,20};
    SDL_Rect rect_g_text{720,38,10,20};
    SDL_Rect rect_b_text{720,66,10,20};
    SDL_Rect rect_r_1{745,10,10,20};
    SDL_Rect rect_g_1{745,38,10,20};
    SDL_Rect rect_b_1{745,66,10,20};
    SDL_Rect rect_r_2{745,10,20,20};
    SDL_Rect rect_g_2{745,38,20,20};
    SDL_Rect rect_b_2{745,66,20,20};
    SDL_Rect rect_r_3{745,10,30,20};
    SDL_Rect rect_g_3{745,38,30,20};
    SDL_Rect rect_b_3{745,66,30,20};
    SDL_Rect rect_random{550,10,120,20};
    SDL_Rect rect_r_plus{690,13,10,15};
    SDL_Rect rect_g_plus{690,41,10,15};
    SDL_Rect rect_b_plus{690,69,10,15};
    SDL_Rect rect_r_minus{705,13,10,15};
    SDL_Rect rect_g_minus{705,41,10,15};
    SDL_Rect rect_b_minus{705,69,10,15};
    SDL_SetRenderDrawColor(renderer,b_r,b_g,b_b,255);
    SDL_RenderClear(renderer);
    while(!quit)
    {
        SDL_SetRenderDrawColor(renderer,150,150,150,255);
        SDL_RenderFillRect(renderer,&rect_menu);
        SDL_SetRenderDrawColor(renderer,240,240,240,255);
        SDL_RenderFillRect(renderer,&rect_r);
        SDL_RenderFillRect(renderer,&rect_g);
        SDL_RenderFillRect(renderer,&rect_b);
        SDL_RenderCopy(renderer,t_r,NULL,&rect_r_text);
        SDL_RenderCopy(renderer,t_g,NULL,&rect_g_text);
        SDL_RenderCopy(renderer,t_b,NULL,&rect_b_text);
        sstream.str("");
        r=pen_color.r;
        sstream << r;
        s_color_text=TTF_RenderText_Solid(font,sstream.str().c_str(),black);
        t_color_text=SDL_CreateTextureFromSurface(renderer,s_color_text);
        while(SDL_PollEvent(&input)!=0)
        {
            if(input.type==SDL_QUIT)
            {
                quit=1;
            }
            else if(input.type==SDL_MOUSEMOTION)
            {
                SDL_GetMouseState(&x,&y);
                if(y>100 && mousedown)
                {
                    SDL_SetRenderDrawColor(renderer,r,g,b,255);
                    if(previous_x==NULL)
                    {
                        previous_x=x;
                        previous_y=y;
                    }
                    SDL_RenderDrawLine(renderer,x,y,previous_x,previous_y);
                    previous_x=x;
                    previous_y=y;
                }
                else
                {
                    previous_x=NULL;
                }
            }
            else if(input.type==SDL_MOUSEBUTTONDOWN)
            {
                if(x>740 && x<790 && y<100)
                {
                    if(y>10 && y<30)
                    {
                        fill_r=1;
                        fill_g=0;
                        fill_b=0;
                    }
                    else if(y>38 && y<58)
                    {
                        fill_g=1;
                        fill_r=0;
                        fill_b=0;
                    }
                    else if(y>66 && y<86)
                    {
                        fill_b=1;
                        fill_r=0;
                        fill_g=0;
                    }
                }
                else
                {
                    fill_r=0;
                    fill_g=0;
                    fill_b=0;
                }
                if(x>550 && x<670 && y>10 && y<30)
                {
                    if(!random)
                    {
                        random=1;
                    }
                    else
                    {
                        random=0;
                    }
                }
                else if(x>690 && x<700 && y>13 && y<28)
                {
                    r_plus_down=1;
                }
                else if(x>690 && x<703 && y>41 && y<66)
                {
                    g_plus_down=1;
                }
                else if(x>690 && x<703 && y>69 && y<84)
                {
                    b_plus_down=1;
                }
                mousedown=1;
            }
            else if(input.type==SDL_MOUSEBUTTONUP)
            {
                previous_x=NULL;
                mousedown=0;
            }
        }
        if(fill_r)
        {
                SDL_SetRenderDrawColor(renderer,200,200,200,255);
                SDL_RenderFillRect(renderer,&rect_r);
        }
        else if(fill_g)
        {
                SDL_SetRenderDrawColor(renderer,200,200,200,255);
                SDL_RenderFillRect(renderer,&rect_g);
        }
        else if(fill_b)
        {
                SDL_SetRenderDrawColor(renderer,200,200,200,255);
                SDL_RenderFillRect(renderer,&rect_b);
        }
       while(1)
        {
            if(pen_color.r>9)
            {
                if(pen_color.r>99)
                {
                    SDL_RenderCopy(renderer,t_color_text,NULL,&rect_r_3);
                    break;
                }
                SDL_RenderCopy(renderer,t_color_text,NULL,&rect_r_2);
                break;
            }
            SDL_RenderCopy(renderer,t_color_text,NULL,&rect_r_1);
            break;
        }
        sstream.str("");
        g=pen_color.g;
        sstream << g;
        s_color_text=TTF_RenderText_Solid(font,sstream.str().c_str(),black);
        t_color_text=SDL_CreateTextureFromSurface(renderer,s_color_text);
        while(1)
        {
            if(pen_color.g>9)
            {
                if(pen_color.g>99)
                {
                    SDL_RenderCopy(renderer,t_color_text,NULL,&rect_g_3);
                    break;
                }
                SDL_RenderCopy(renderer,t_color_text,NULL,&rect_g_2);
                break;
            }
            SDL_RenderCopy(renderer,t_color_text,NULL,&rect_g_1);
            break;
        }
        sstream.str("");
        b=pen_color.b;
        sstream << b;
        s_color_text=TTF_RenderText_Solid(font,sstream.str().c_str(),black);
        t_color_text=SDL_CreateTextureFromSurface(renderer,s_color_text);
        while(1)
        {
            if(pen_color.b>9)
            {
                if(pen_color.b>99)
                {
                    SDL_RenderCopy(renderer,t_color_text,NULL,&rect_b_3);
                    break;
                }
                SDL_RenderCopy(renderer,t_color_text,NULL,&rect_b_2);
                break;
            }
            SDL_RenderCopy(renderer,t_color_text,NULL,&rect_b_1);
            break;
        }
        if(random)
        {
            SDL_SetRenderDrawColor(renderer,180,180,180,255);
            SDL_RenderFillRect(renderer,&rect_random);
            pen_color.r=rand()%256;
            pen_color.g=rand()%256;
            pen_color.b=rand()%256;
        }
        SDL_RenderCopy(renderer,t_plus,NULL,&rect_r_plus);
        SDL_RenderCopy(renderer,t_plus,NULL,&rect_g_plus);
        SDL_RenderCopy(renderer,t_plus,NULL,&rect_b_plus);
        SDL_RenderCopy(renderer,t_minus,NULL,&rect_r_minus);
        SDL_RenderCopy(renderer,t_minus,NULL,&rect_g_minus);
        SDL_RenderCopy(renderer,t_minus,NULL,&rect_b_minus);
        SDL_RenderCopy(renderer,t_random,NULL,&rect_random);
        SDL_RenderPresent(renderer);
    }
    return 0;
}
